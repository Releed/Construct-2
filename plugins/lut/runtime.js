// glsl glut 8 jan 2014 (c) Matt DesLauriers
/*
The MIT License (MIT) Copyright (c) 2014 Matt DesLauriers

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/


//WebGL Renderer for quick shader based toys
// (c) André Venâncio 24 Nov 2015 additionnal code Gigatron
/*The MIT License (MIT)

Copyright (c) 2015 Lowww Ltd

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/
var ShaderToy=function(){if(window.WebGLRenderingContext)this.init();else console.error("You need a WebGL browser: Try get.webgl.org")};
ShaderToy.prototype={constructor:ShaderToy.prototype,version:"0.0.5",mouse:new Float32Array(2),textures:[],width:320,height:240,_ready:false,_pause:false,_vertexShader:["attribute vec2 position;","void main() {","   gl_Position = vec4( position, 0.0, 1.0 );","}"],_fragmentShader:["precision highp float;","uniform float iGlobalTime;","uniform vec2 iResolution;","uniform vec2 iMouse;","uniform sampler2D iChannel0;","uniform sampler2D iChannel1;","uniform sampler2D iChannel2;","uniform sampler2D iChannel3;",
"uniform sampler2D iChannel4;","uniform sampler2D iChannel5;","void mainImage( out vec4 fragColor, in vec2 fragCoord ) { fragColor.rgb = vec3( 0.5 + 0.5 * cos( iGlobalTime ) ); }","void main() {","   vec4 color = vec4( 0.0, 0.0, 0.0, 1.0 );","   mainImage( color, gl_FragCoord.xy );","   gl_FragColor = color;","}"],_loadExternalFile:function(url){return new Promise(function(resolve,reject){var req=new XMLHttpRequest;req.open("GET",url);req.onload=function(){if(req.status===200)resolve(req.response);
else reject(Error(req.statusText))};req.onerror=function(){reject(Error("Network Error"))};req.send()})},_createProgram:function(vertexShader,fragmentShader){var vs=this._createShader(vertexShader,this.gl.VERTEX_SHADER);var fs=this._createShader(fragmentShader,this.gl.FRAGMENT_SHADER);var program=this.gl.createProgram();this.gl.attachShader(program,vs);this.gl.attachShader(program,fs);this.gl.linkProgram(program);return program},_createShader:function(str,type){var shader=this.gl.createShader(type);
this.gl.shaderSource(shader,str);this.gl.compileShader(shader);var compiled=this.gl.getShaderParameter(shader,this.gl.COMPILE_STATUS);if(!compiled){var error=this.gl.getShaderInfoLog(shader);console.error("Error compiling shader",shader,error);this.gl.deleteShader(shader);return null}return shader},_createTexture:function(index){this.gl.activeTexture(this.gl.TEXTURE0+index);var texture=this.gl.createTexture();this.gl.bindTexture(this.gl.TEXTURE_2D,texture);this.gl.texImage2D(this.gl.TEXTURE_2D,0,
this.gl.RGBA,1,1,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,new Uint8Array([0,255,255,255]));return texture},_updateTexture:function(buf,index){if(this.textures[index]){this.gl.deleteTexture(this.textures[index]);delete this.textures[index];this._updateTexture(buf,index)}else{this.textures[index]=this._createTexture(index);this.gl.activeTexture(this.gl.TEXTURE0+index);this.gl.bindTexture(this.gl.TEXTURE_2D,this.textures[index]);this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL,true);this.gl.texImage2D(this.gl.TEXTURE_2D,
0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,buf);if(this._isPowerOf2(buf.width)&&this._isPowerOf2(buf.height)){this.gl.generateMipmap(this.gl.TEXTURE_2D);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.REPEAT);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.REPEAT);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.NEAREST);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST)}else{this.gl.texParameteri(this.gl.TEXTURE_2D,
this.gl.TEXTURE_WRAP_S,this.gl.REPEAT);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.REPEAT);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.NEAREST);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST)}}},_getUniform:function(name){if(!this.program.uniforms)this.program.uniforms={};if(!this.program.uniforms[name])this.program.uniforms[name]=this.gl.getUniformLocation(this.program,name);return this.program.uniforms[name]},
_getAttribute:function(name){if(!this.program.atttributes)this.program.atttributes={};if(!this.program.atttributes[name])this.program.atttributes[name]=this.gl.getAttribLocation(this.program,name);return this.program.atttributes[name]},_setU1f:function(name,x){this.gl.uniform1f(this._getUniform(name),x)},_setU2f:function(name,x,y){this.gl.uniform2f(this._getUniform(name),x,y)},_setU3f:function(name,x,y,z){this.gl.uniform3f(this._getUniform(name),x,y,z)},_setU2fv:function(name,v2){this.gl.uniform2fv(this._getUniform(name),
v2)},_setU1i:function(name,x){this.gl.uniform1i(this._getUniform(name),x)},_onBlur:function(e){},_onFocus:function(e){this._pause=false},_onMove:function(e){this.mouse[0]=e.layerX;this.mouse[1]=e.layerY},_isPowerOf2:function(value){return(value&value-1)===0},init:function(){var canvas=document.createElement("canvas");canvas.width=this.width;canvas.height=this.height;window.addEventListener("blur",this._onBlur.bind(this));window.addEventListener("focus",this._onFocus.bind(this));window.addEventListener("mousemove",
this._onMove.bind(this));this.gl=canvas.getContext("webgl");this.gl.getExtension("OES_texture_float");this.gl.getExtension("OES_standard_derivatives");this.gl.getExtension("OES_float_linear");this.gl.getExtension("OES_half_float_linear");if(!this.gl)console.error("Couldn't start WebGL. Try get.webgl.org/troubleshooting");var args=["\n%cShader%cToy%c v: "+this.version+"\n","background: #1A1A1A; color: #00ffff; font-size: x-large;","background: #00ffff; color: #1A1A1A; font-size: x-large;","background: transparent; color: #000000; font-size: x-small;"];
if(!window.shadertoycredits){window.shadertoycredits=true;console.log.apply(console,args)}var quad=new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]);var buffer=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,buffer);this.gl.bufferData(this.gl.ARRAY_BUFFER,quad,this.gl.STATIC_DRAW);var program=this._createProgram(this._vertexShader.join("\n"),this._fragmentShader.join("\n"));this.useProgram(program)},loadFragment:function(url){this._ready=false;this._loadExternalFile(url).then(function(data){this.writeFragment(data)}.bind(this))},
loadImage0:function(url,index){var self=this;var image=new Image;image.src=url;image.index=index||0;image.onload=function(){self._updateTexture(image,this.index)}},loadImage1:function(url,index){var self=this;var image=new Image;image.src=url;image.index=index||1;image.onload=function(){self._updateTexture(image,this.index)}},loadImage2:function(url,index){var self=this;var image=new Image;image.src=url;image.index=index||2;image.onload=function(){self._updateTexture(image,this.index)}},loadImage3:function(url,
index){var self=this;var image=new Image;image.src=url;image.index=index||3;image.onload=function(){self._updateTexture(image,this.index)}},loadImage4:function(url,index){var self=this;var image=new Image;image.src=url;image.index=index||4;image.onload=function(){self._updateTexture(image,this.index)}},loadImage5:function(url,index){var self=this;var image=new Image;image.src=url;image.index=index||5;image.onload=function(){self._updateTexture(image,this.index)}},writeFragment:function(str){this._ready=
false;this._fragmentShader[10]=str;var program=this._createProgram(this._vertexShader.join("\n"),this._fragmentShader.join("\n"));this.useProgram(program)},useProgram:function(program){this.program=program;this.gl.useProgram(this.program);this.gl.enableVertexAttribArray(this._getAttribute("position"));this.gl.vertexAttribPointer(this._getAttribute("position"),2,this.gl.FLOAT,false,0,0);this._setU2f("iResolution",this.width,this.height);this.startTime=Date.now();this._ready=true},setSize:function(width,
height){this.width=width;this.height=height;this.gl.canvas.width=this.width;this.gl.canvas.height=this.height;this.gl.viewportWidth=this.width;this.gl.viewportHeight=this.height;this.gl.viewport(0,0,this.width,this.height);if(this.program)this._setU2f("iResolution",this.width,this.height)},clear:function(r,g,b,a){this.gl.clearColor(r||0,g||0,b||0,a||1);this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT)},render:function(){if(this._ready!==true)return;if(this._pause)return;this._setU1f("iGlobalTime",
(Date.now()-this.startTime)/1E3);this._setU2fv("iMouse",this.mouse);this._setU1i("iChannel0",0);this._setU1i("iChannel1",1);this._setU1i("iChannel2",2);this._setU1i("iChannel3",3);this._setU1i("iChannel4",4);this._setU1i("iChannel5",5);this.clear();this.gl.drawArrays(this.gl.TRIANGLES,0,6)}};
// ECMAScript 5 strict mode
"use strict";



assert2(cr, "cr namespace not created");
assert2(cr.plugins_, "cr.plugins_ not created");

//  global var please !!!
 
			var renderer;
			 
			 var inst;

/////////////////////////////////////
// Plugin class
cr.plugins_.c2lut = function(runtime)
{
	this.runtime = runtime;
};

(function(){var pluginProto=cr.plugins_.c2lut.prototype;pluginProto.Type=function(plugin){this.plugin=plugin;this.runtime=plugin.runtime};var typeProto=pluginProto.Type.prototype;typeProto.onCreate=function(){};pluginProto.Instance=function(type){this.type=type;this.runtime=type.runtime};var instanceProto=pluginProto.Instance.prototype;var fxNames=["lighter","xor","copy","destination-over","source-in","destination-in","source-out","destination-out","source-atop","destination-atop"];instanceProto.effectToCompositeOp=
function(effect){if(effect<=0||effect>=11)return"source-over";return fxNames[effect-1]};instanceProto.updateBlend=function(effect){var gl=this.runtime.gl;if(!gl)return;this.srcBlend=gl.ONE;this.destBlend=gl.ONE_MINUS_SRC_ALPHA;switch(effect){case 1:this.srcBlend=gl.ONE;this.destBlend=gl.ONE;break;case 2:break;case 3:this.srcBlend=gl.ONE;this.destBlend=gl.ZERO;break;case 4:this.srcBlend=gl.ONE_MINUS_DST_ALPHA;this.destBlend=gl.ONE;break;case 5:this.srcBlend=gl.DST_ALPHA;this.destBlend=gl.ZERO;break;
case 6:this.srcBlend=gl.ZERO;this.destBlend=gl.SRC_ALPHA;break;case 7:this.srcBlend=gl.ONE_MINUS_DST_ALPHA;this.destBlend=gl.ZERO;break;case 8:this.srcBlend=gl.ZERO;this.destBlend=gl.ONE_MINUS_SRC_ALPHA;break;case 9:this.srcBlend=gl.DST_ALPHA;this.destBlend=gl.ONE_MINUS_SRC_ALPHA;break;case 10:this.srcBlend=gl.ONE_MINUS_DST_ALPHA;this.destBlend=gl.SRC_ALPHA;break}};instanceProto.onCreate=function(){this.visible=this.properties[2]===0;this.compositeOp=this.effectToCompositeOp(this.properties[0]);this.updateBlend(this.properties[0]);
this.canvas=document.createElement("canvas");this.canvas.width=this.width;this.canvas.height=this.height;this.ctx=this.canvas.getContext("2d");renderer=new ShaderToy;this.canvas=renderer.gl.canvas;renderer.setSize(this.width,this.height);var fragment=[" uniform float zz,xx,yy,zzz,spd;  "," #define GLSLIFY 0 ","vec4 lookup_1_0(in vec4 textureColor, in sampler2D lookupTable) {                        ","    #ifndef LUT_NO_CLAMP                                                                 ","        textureColor = clamp(textureColor, 0.0, 1.0);                                    ",
"    #endif                                                                               ","                                                                                         ","    mediump float blueColor = textureColor.b * 63.0;                                     ","                                                                                         ","    mediump vec2 quad1;                                                                  ","    quad1.y = floor(floor(blueColor) / 8.0);                                             ",
"    quad1.x = floor(blueColor) - (quad1.y * 8.0);                                        ","                                                                                         ","    mediump vec2 quad2;                                                                  ","    quad2.y = floor(ceil(blueColor) / 8.0);                                              ","    quad2.x = ceil(blueColor) - (quad2.y * 8.0);                                         ","                                                                                         ",
"    highp vec2 texPos1;                                                                  ","    texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);  ","    texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);  ","                                                                                         ","    #ifdef LUT_FLIP_Y                                                                    ","        texPos1.y = 1.0-texPos1.y;                                                       ",
"    #endif                                                                               ","                                                                                         ","    highp vec2 texPos2;                                                                  ","    texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);  ","    texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);  ","                                                                                         ",
"    #ifdef LUT_FLIP_Y                                                                    ","        texPos2.y = 1.0-texPos2.y;                                                       ","    #endif                                                                               ","                                                                                         ","     lowp vec4 newColor1 = texture2D(lookupTable, texPos1);                                   ","     lowp vec4 newColor2 = texture2D(lookupTable, texPos2);                                   ",
"                                                                                         ","     lowp vec4 newColor = mix(newColor1, newColor2, fract(blueColor));                        ","    return newColor;                                                                     ","}                                                                                        ","void mainImage( out vec4 fragColor, in vec2 fragCoord )                               ","{                                                                                     ",
"       vec2 uv = fragCoord/iResolution.xy;    ","    lowp vec4 textureColor = texture2D(iChannel0, uv);             ","        // textureColor = clamp(textureColor, 0.0, 1.0);                   ","                                                                                          ","     mediump float blueColor = textureColor.b*63.0 ;                                     ","                                                                                          ","     mediump vec2 quad1;                                                                  ",
"     quad1.y = floor(floor(blueColor) / 8.0);                                             ","     quad1.x = floor(blueColor) - (quad1.y * 8.0);                                        ","                                                                                          ","     mediump vec2 quad2;                                                                  ","     quad2.y = floor(ceil(blueColor) / 8.0);                                              ","     quad2.x = ceil(blueColor) - (quad2.y * 8.0);                                         ",
"                                                                                          ","     highp vec2 texPos1;                                                                  ","     texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);  ","     texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);  ","                                                                                          ","texPos1.y = 1.0-texPos1.y;","     highp vec2 texPos2;                                                                  ",
"     texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);  ","     texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);  ","                                                                                          ","texPos2.y = 1.0-texPos2.y;","     lowp vec4 newColor1 = texture2D(iChannel1, texPos1);                        ","     lowp vec4 newColor2 = texture2D(iChannel1, texPos2);                        ","                                                                                          ",
"     lowp vec4 newColor = mix(newColor1, newColor2, fract(blueColor));                    ","   if (uv.x > xx)","     fragColor = vec4(newColor.rgb, textureColor.w);                                    ","else fragColor = vec4(textureColor); ","}"].join("\n");renderer.writeFragment(fragment);this.runtime.tickMe(this)};instanceProto.tick=function(){renderer.render();this.runtime.redraw=true;this.update_tex=true};instanceProto.onDestroy=function(){};instanceProto.saveToJSON=function(){return{"canvas_w":this.canvas.width,
"canvas_h":this.canvas.height,"image":this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height).data}};instanceProto.loadFromJSON=function(o){var canvasWidth=this.canvas.width=o["canvas_w"];var canvasHeight=this.canvas.height=o["canvas_h"];var data=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height).data;for(var y=0;y<canvasHeight;++y)for(var x=0;x<canvasWidth;++x){var index=(y*canvasWidth+x)*4;for(var c=0;c<4;++c)data[index+c]=o["image"][index+c]}};instanceProto.drawGL=function(glw){glw.setBlend(this.srcBlend,
this.destBlend);if(this.update_tex){if(this.tex)glw.deleteTexture(this.tex);this.tex=glw.loadTexture(this.canvas,false,this.runtime.linearSampling);this.update_tex=false}glw.setTexture(this.tex);glw.setOpacity(this.opacity);var q=this.bquad;if(this.runtime.pixel_rounding){var ox=Math.round(this.x)-this.x;var oy=Math.round(this.y)-this.y;glw.quad(q.tlx+ox,q.tly+oy,q.trx+ox,q.try_+oy,q.brx+ox,q.bry+oy,q.blx+ox,q.bly+oy)}else glw.quad(q.tlx,q.tly,q.trx,q.try_,q.brx,q.bry,q.blx,q.bly)};pluginProto.cnds=
{};var cnds=pluginProto.cnds;function Acts(){}pluginProto.acts=new Acts;Acts.prototype.SetEffect=function(effect){this.compositeOp=this.effectToCompositeOp(effect);this.runtime.redraw=true;this.update_tex=true};Acts.prototype.SetTexture=function(obj){inst=obj.getFirstPicked();renderer.loadImage0(inst.curFrame.texture_file)};Acts.prototype.SetGrad=function(obj1){var inst=obj1.getFirstPicked();renderer.loadImage1(inst.curFrame.texture_file)};Acts.prototype.SetXpos=function(xp){renderer._setU1f("xx",
xp)};pluginProto.exps={};var exps=pluginProto.exps;exps.AsJSON=function(ret){ret.set_string(JSON.stringify({"c2array":true,"size":[1,1,this.canvas.width*this.canvas.height*4],"data":[[this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height).data]]}))}})();